<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
	"
%>

<%
	CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
	INode node = (INode)codeGenArgument.getArgument();
	String cid = node.getUniqueName();

%>
	for (JobStructureCatcherUtils.JobStructureCatcherMessage jcm : <%=cid %>.getMessages()) {
		org.talend.logging.audit.Context log_context_<%=cid%> = null;
		if(jcm.component_name == null) {//job level log
			if(jcm.status == null) {//job start
				log_context_<%=cid%> = org.talend.job.audit.JobContextBuilder.create().jobName(jcm.job_name).jobId(jcm.job_id).jobVersion(jcm.job_version).timestamp(jcm.moment).build();
				auditLogger_<%=cid%>.jobstart(log_context_<%=cid%>);
			} else {//job end
				long timeMS = jcm.end_time - jcm.start_time;
				String time = String.format(java.util.Locale.US, "%1$.2fs", (timeMS * 1.0)/1000);
			
				log_context_<%=cid%> = org.talend.job.audit.JobContextBuilder.create().jobName(jcm.job_name).jobId(jcm.job_id).jobVersion(jcm.job_version)
					.timestamp(jcm.moment).time(time).status(jcm.status).build();
				auditLogger_<%=cid%>.jobstop(log_context_<%=cid%>);
			}
		} else if(jcm.current_connector == null) {//component parameters log
			log_context_<%=cid%> = org.talend.job.audit.JobContextBuilder.create().jobName(jcm.job_name).jobId(jcm.job_id).jobVersion(jcm.job_version)
				.connectorType(jcm.component_name).connectorId(jcm.component_id).parameters(jcm.component_parameters.toString()).build();
			auditLogger_<%=cid%>.runcomponent(log_context_<%=cid%>);
		} else {//component connector meter log
			long timeMS = jcm.end_time - jcm.start_time;
			String time = String.format(java.util.Locale.US, "%1$.2fs", (timeMS * 1.0)/1000);
			String speed = String.format(java.util.Locale.US, "%1$.2f rows/s", ((jcm.total_row_number * 1.0)/timeMS) * 1000);
			
			if(jcm.current_connector_as_input) {//log current component input line
				log_context_<%=cid%> = org.talend.job.audit.JobContextBuilder.create().jobName(jcm.job_name).jobId(jcm.job_id).jobVersion(jcm.job_version)
					.connectorType(jcm.component_name).connectorId(jcm.component_id)
					.connectionName(jcm.current_connector).connectionType(jcm.current_connector_type)
					.rows(jcm.total_row_number).time(time).speed(speed).build();
				auditLogger_<%=cid%>.flowInput(log_context_<%=cid%>);
			} else {//log current component output/reject line
				log_context_<%=cid%> = org.talend.job.audit.JobContextBuilder.create().jobName(jcm.job_name).jobId(jcm.job_id).jobVersion(jcm.job_version)
					.connectorType(jcm.component_name).connectorId(jcm.component_id)
					.connectionName(jcm.current_connector).connectionType(jcm.current_connector_type)
					.rows(jcm.total_row_number).time(time).speed(speed).build();
				auditLogger_<%=cid%>.flowOutput(log_context_<%=cid%>);
			}
		}
	}
