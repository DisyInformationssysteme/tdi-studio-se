<%@ jet 
	imports=""
%>

		if(!tempValue_<%=cid%>.isEmpty()) {
			try {
				switch(dynamicMetadata_<%=cid%>.getType()) {
					case "id_String":
					case "id_Object":
						v_<%=cid%> = tempValue_<%=cid%>;
						break;
					case "id_Integer":
						if(dynamicMetadata_<%=cid%>.isNullable()) {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_Integer(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_Integer(tempValue_<%=cid%>);
							<%}%>
						} else {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_int(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_int(tempValue_<%=cid%>);
							<%}%>
						}
						break;
					case "id_Long":
						if(dynamicMetadata_<%=cid%>.isNullable()) {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_Long(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_Long(tempValue_<%=cid%>);
							<%}%>
						} else {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_long(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_long(tempValue_<%=cid%>);
							<%}%>
						}
						break;
					case "id_Short":
						if(dynamicMetadata_<%=cid%>.isNullable()) {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_Short(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_Short(tempValue_<%=cid%>);
							<%}%>
						} else {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_short(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_short(tempValue_<%=cid%>);
							<%}%>
						}
						break;
					case "id_Byte":
						if(dynamicMetadata_<%=cid%>.isNullable()) {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_Byte(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_Byte(tempValue_<%=cid%>);
							<%}%>
						} else {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_byte(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_byte(tempValue_<%=cid%>);
							<%}%>
						}
						break;
					case "id_Date":
						<%if(checkNum || checkDate){%>
						v_<%=cid%> = ParserUtils.parseTo_Date(tempValue_<%=cid%>, dynamicMetadata_<%=cid%>.getFormat()==null ? <%= patternValue %> : dynamicMetadata_<%=cid%>.getFormat(), false);
						<%} else {%>
						v_<%=cid%> = ParserUtils.parseTo_Date(tempValue_<%=cid%>, dynamicMetadata_<%=cid%>.getFormat()==null ? <%= patternValue %> : dynamicMetadata_<%=cid%>.getFormat());
						<%}%>
						break;
					case "id_List":
						v_<%=cid%> = ParserUtils.parseTo_List(tempValue_<%=cid%>, separator_<%=cid%>);
						break;
					case "id_BigDecimal":
						<%if(advancedSeparator) {%>
						v_<%=cid%> = ParserUtils.parseTo_BigDecimal(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
						<%} else {%>
						v_<%=cid%> = ParserUtils.parseTo_BigDecimal(tempValue_<%=cid%>);
						<%}%>
						break;
					case "id_Double":
						if(dynamicMetadata_<%=cid%>.isNullable()) {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_Double(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_Double(tempValue_<%=cid%>);
							<%}%>
						} else {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_double(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_double(tempValue_<%=cid%>);
							<%}%>
						}
						break;
					case "id_Float":
						if(dynamicMetadata_<%=cid%>.isNullable()) {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_Float(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_Float(tempValue_<%=cid%>);
							<%}%>
						} else {
							<%if(advancedSeparator) {%>
							v_<%=cid%> = ParserUtils.parseTo_float(ParserUtils.parseTo_Number(tempValue_<%=cid%>, <%= thousandsSeparator %>, <%= decimalSeparator %>));
							<%} else {%>
							v_<%=cid%> = ParserUtils.parseTo_float(tempValue_<%=cid%>);
							<%}%>
						}
						break;
					case "id_Boolean":
						if(dynamicMetadata_<%=cid%>.isNullable()) {
							v_<%=cid%> = ParserUtils.parseTo_Boolean(tempValue_<%=cid%>);
						} else {
							v_<%=cid%> = ParserUtils.parseTo_boolean(tempValue_<%=cid%>);
						}
						break;
					case "id_Character":
						if(dynamicMetadata_<%=cid%>.isNullable()) {
							v_<%=cid%> = ParserUtils.parseTo_Character(tempValue_<%=cid%>);
						} else {
							v_<%=cid%> = ParserUtils.parseTo_char(tempValue_<%=cid%>);
						}
						break;
					case "id_byte[]":
						v_<%=cid%> = tempValue_<%=cid%>.getBytes(<%=encoding%>);
						break;
					default:
						break;
				}
			} catch (java.lang.Exception ex_<%=cid%>) {
				globalMap.put("<%=cid%>_ERROR_MESSAGE",ex_<%=cid%>.getMessage());
				rowstate_<%=cid%>.setException(new RuntimeException(String.format("Couldn't parse value for column '%s' in '%s', value is '%s'. Details: %s",
					"<%= column.getLabel() %>", "<%=targetConnName %>", tempValue_<%=cid%>, ex_<%=cid%>), ex_<%=cid%>));
			}
		}
	}<%//B1 end%>
	
	if((v_<%=cid%> == null) && (rowstate_<%=cid%>.getException()==null)) {
		switch(dynamicMetadata_<%=cid%>.getType()) {
			case "id_String":
			case "id_Object":
				v_<%=cid%> = "";
				break;
			case "id_Integer":
				if(!dynamicMetadata_<%=cid%>.isNullable()) v_<%=cid%> = Integer.valueOf("0");
				break;
			case "id_Long":
				if(!dynamicMetadata_<%=cid%>.isNullable()) v_<%=cid%> = Long.valueOf("0");
				break;
			case "id_Short":
				if(!dynamicMetadata_<%=cid%>.isNullable()) v_<%=cid%> = Short.valueOf("0");
				break;
			case "id_Byte":
				if(!dynamicMetadata_<%=cid%>.isNullable()) v_<%=cid%> = Byte.valueOf("0");
				break;
			case "id_Double":
				if(!dynamicMetadata_<%=cid%>.isNullable()) v_<%=cid%> = Double.valueOf("0");
				break;
			case "id_Float":
				if(!dynamicMetadata_<%=cid%>.isNullable()) v_<%=cid%> = Float.valueOf("0");
				break;
			case "id_Boolean":
				if(!dynamicMetadata_<%=cid%>.isNullable()) v_<%=cid%> = false;
			case "id_Character":
				if(!dynamicMetadata_<%=cid%>.isNullable()) v_<%=cid%> = ' ';
			default:
				break;
		}
	}
	
	<%=targetConnName %>.<%=column.getLabel() %>.addColumnValue(v_<%=cid%>);